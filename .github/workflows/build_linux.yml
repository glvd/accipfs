name: build_linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  APP_NAME: accipfs
  UPLOAD_BIN_FILE: true

jobs:

  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
        arch: [386,amd64]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        GOARCH: ${{ matrix.arch }}
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build ${{ matrix.platform }} ${{ matrix.arch }}
      if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
      id: build_linux
      run: |
          ${GOROOT}/bin/go get --insecure -v bug.vlavr.com/godcong/dhcrypto
          
          ${GOROOT}/bin/go mod tidy
          
          export GOARCH=${{ matrix.arch }}
          echo "::set-env name=BUILDBINNAME::${{env.APP_NAME}}_$(go env GOOS)_$(go env GOARCH)"
          
          echo "buiding"
          ${GOROOT}/bin/go build -o ${{env.APP_NAME}}_$(go env GOOS)_$(go env GOARCH) -v ./console
          
          echo "compress"
          tar -zcvf ${{env.APP_NAME}}_$(go env GOOS)_$(go env GOARCH).tar.gz ./${{env.APP_NAME}}_$(go env GOOS)_$(go env GOARCH)
  
    - name: Upload Linux
      uses: actions/upload-artifact@master
      if: (matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest') && env.UPLOAD_BIN_FILE
      with:
        name: ${{ env.BUILDBINNAME }}.tar.gz
        path: ${{ env.BUILDBINNAME }}.tar.gz     

    - name: Create Release
      id: create_release_linux
      if: (matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest') && env.UPLOAD_BIN_FILE
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        artifacts: "${{ env.BUILDBINNAME }}.tar.gz"
        allowUpdates: true 
        commit: master 
        tag: auto_build
        body: |
          this is only a latest build from master
          version: https://github.com/glvd/accipfs/commit/${{ github.sha }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false

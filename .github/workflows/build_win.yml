name: build_win

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  UPLOAD_BIN_FILE: true

jobs:

  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ windows-latest]
        arch: [386, amd64]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        GOARCH: ${{ matrix.arch }}
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
 
    - name: Build ${{ matrix.platform }} ${{ matrix.arch }}
      if: matrix.platform == 'windows-latest' && matrix.arch == 'amd64'
      id: build_windows_amd64
      run: |
          go get --insecure -v bug.vlavr.com/godcong/dhcrypto
          go mod tidy

          set GOARCH=${{ matrix.arch }}
          echo "::set-env name=BUILDBINNAME::accipfs_windows_amd64"
          
          echo "buiding"
          go build -o accipfs_windows_amd64.exe -v ./console
          
          echo "compress"
          Compress-Archive -Path accipfs_windows_amd64.exe -DestinationPath accipfs_windows_amd64.zip
  
    - name: Build ${{ matrix.platform }} ${{ matrix.arch }}
      if: matrix.platform == 'windows-latest' && matrix.arch == '386'
      id: build_windows_386
      run: |
          go mod tidy
          
          go get --insecure -v -u bug.vlavr.com/godcong/dhcrypto
          
          set GOARCH=${{ matrix.arch }}
          echo "::set-env name=BUILDBINNAME::accipfs_windows_386"
          
          echo "buiding"
          go build -o accipfs_windows_386.exe -v ./console
          
          echo "compress"
          Compress-Archive -Path accipfs_windows_386.exe -DestinationPath accipfs_windows_386.zip
 
    - name: Upload Windows
      uses: actions/upload-artifact@master
      if: matrix.platform == 'windows-latest' && env.UPLOAD_BIN_FILE
      with:
        name: ${{ env.BUILDBINNAME }}.zip
        path: ${{ env.BUILDBINNAME }}.zip
        
    - name: Create Release
      id: create_release_windows
      if: matrix.platform == 'windows-latest' && env.UPLOAD_BIN_FILE
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        artifacts: "${{ env.BUILDBINNAME }}.zip"
        allowUpdates: true 
        commit: master 
        tag: auto_build
        body: |
          this is only a latest build from master
          version: https://github.com/glvd/accipfse/commit/${{ github.sha }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false
